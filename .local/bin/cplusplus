#!/bin/bash

directory="edwin"

mkdir $(pwd)/$directory && cd $(pwd)/$directory
mkdir bin build config include lib src

echo "#include <cstdio>

int main(int argc, char* argv[]) {
    printf(\"Hello, CMake!\n\");
    return 0;
}" >> ./src/main.cpp


echo '
#pragma once
#define VERSION_MAJOR @Boilerplate_VERSION_MAJOR@
#define VERSION_MINOR @Boilerplate_VERSION_MINOR@
' >> ./include/Config.h.in

echo '
# Specify the minimum version of CMake that can run this script
cmake_minimum_required(VERSION 3.12)

# Project name and version
project(Boilerplate VERSION 1.0)

# Request C++ 20 standard features
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

configure_file(include/Config.h.in
      "${CMAKE_CURRENT_SOURCE_DIR}/include/Config.h")

# Compile the passed source files into an executable
add_executable(Boilerplate
    "${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp")

# Set the output directory for executables
set_target_properties(Boilerplate
    PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")

target_include_directories(Boilerplate PUBLIC
       "${CMAKE_CURRENT_SOURCE_DIR}/include")
' >> CMakeLists.txt
